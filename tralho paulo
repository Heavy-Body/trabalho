import React, { useState, useEffect } from 'react';
import { StyleSheet, Text, View, TouchableOpacity } from 'react-native';

export default function App() {
  // Estado para o relógio
  const [hora, setHora] = useState(new Date().toLocaleTimeString('en-US', { hour12: false }));
  
  const [segundos, setSegundos] = useState(0);
  const [cronometroAtivo, setCronometroAtivo] = useState(false);

  
  useEffect(() => {
    const intervaloRelogio = setInterval(() => {
      setHora(new Date().toLocaleTimeString('en-US', { hour12: false }));
    }, 1000);
    
    return () => clearInterval(intervaloRelogio);
  }, []);

  useEffect(() => {
    let intervaloCronometro;
    if (cronometroAtivo) {
      intervaloCronometro = setInterval(() => {
        setSegundos((prevSegundos) => prevSegundos + 1);
      }, 1000);
    } else if (!cronometroAtivo && segundos !== 0) {
      clearInterval(intervaloCronometro);
    }

    return () => clearInterval(intervaloCronometro);
  }, [cronometroAtivo, segundos]);

  
  const iniciarPausarCronometro = () => {
    setCronometroAtivo(!cronometroAtivo);
  };

  const reiniciarCronometro = () => {
    setCronometroAtivo(false);
    setSegundos(0);
  };

  
  const formatarTempo = (tempo) => {
    const minutos = Math.floor(tempo / 60);
    const segundos = tempo % 60;
    return `${minutos < 10 ? '0' : ''}${minutos}:${segundos < 10 ? '0' : ''}${segundos}`;
  };

  return (
    <View style={styles.container}>
      {/* Exibe o relógio */}
      <Text style={styles.timeText}>{hora}</Text>

      {/* Exibe o cronômetro */}
      <Text style={styles.timerText}>{formatarTempo(segundos)}</Text>

      {/* Botões de Controle */}
      <View style={styles.buttonContainer}>
        <TouchableOpacity style={styles.button} onPress={iniciarPausarCronometro}>
          <Text style={styles.buttonText}>{cronometroAtivo ? 'Pausar' : 'Iniciar'}</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={reiniciarCronometro}>
          <Text style={styles.buttonText}>Reiniciar</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F4A460',
  },
  timeText: {
    fontSize: 60,
    fontWeight: 'normal',
    color: '#1C1C1C',
    marginBottom: 20,
  },
  timerText: {
    fontSize: 50,
    fontWeight: 'normal',
    color: '#1C1C1C',
    marginBottom: 30,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    width: '80%',
  },
  button: {
    backgroundColor: '#1C1C1C',
    padding: 15,
    borderRadius: 10,
    margin: 10,
    width: 120,
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold',
  },
});
